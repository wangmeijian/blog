(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{380:function(t,s,e){t.exports=e.p+"assets/img/chrome_ext.e35135d4.png"},381:function(t,s,e){t.exports=e.p+"assets/img/chrome_extension.cac9a9cb.png"},409:function(t,s,e){"use strict";e.r(s);var a=e(46),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"深入了解chrome插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入了解chrome插件"}},[t._v("#")]),t._v(" 深入了解Chrome插件")]),t._v(" "),a("p",[a("img",{attrs:{src:e(380),alt:"An image"}})]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("Chrome 插件可以做很多事情，比如做json格式化的"),a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Formatter"),a("OutboundLink")],1),t._v("，将json在web端的可读性提升了N个级别；又或者前端工程师们，经常需要在页面上copy文字，可能需要这个"),a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/inhnhgihdkbalmmojcbpalkkmhkmcdjm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Auto Clipboard"),a("OutboundLink")],1),t._v("插件，只要选中文本，自动复制到剪切板。一个优质的插件，可以大大提示学习和开发效率。")]),t._v(" "),a("p",[t._v("Chrome插件入门级的教程网上已经有很多了，这里就不再赘述，需要注意的是，网上大部分教程都是基于Manifest V2的，目前最新的Manifest版本是V3，并且，2022年1月中旬，Chrome不再接受Manifest V2插件的发布，所以建议没有接触过Chrome插件的同学，先参考Google官方最新的入门级插件"),a("a",{attrs:{href:"https://github.com/GoogleChrome/chrome-extensions-samples",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome Extensions samples"),a("OutboundLink")],1),t._v("了解一下，再往下看。")]),t._v(" "),a("h2",{attrs:{id:"组成chrome插件的基本元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组成chrome插件的基本元素"}},[t._v("#")]),t._v(" 组成Chrome插件的基本元素")]),t._v(" "),a("p",[t._v("一个Chrome插件的基本元素包括后台脚本（background.js）、内容脚本（content_scripts.js）、配置页面（options page）、弹窗页面（popup page）以及清单（manifest.json）")]),t._v(" "),a("p",[t._v("它们的作用如下：")]),t._v(" "),a("ul",[a("li",[t._v("后台脚本（background.js）运行在后台的js文件，通常用来监听事件，注意："),a("strong",[t._v("后台脚本不能访问DOM")])]),t._v(" "),a("li",[t._v("内容脚本（content_scripts.js），注入到已加载的浏览器页面上下文中执行的js文件，如果页面包含iframe，内容脚本会在每个iframe内嵌页面上下文中执行")]),t._v(" "),a("li",[t._v("配置页面（options page），顾名思义，用来做插件的个性化配置的页面，配置可以保存到chrome.storage，类似于localStorage，chrome.storage分为chrome.storage.local和chrome.storage.sync，chrome.storage.sync会自动同步到用户登录的任何Chrome浏览器，chrome.storage.local只会保存到本地")]),t._v(" "),a("li",[t._v("弹窗页面（popup page）用户点击Chrome右上角的插件图标时，弹出的页面")]),t._v(" "),a("li",[t._v("清单（manifest.json）用来配置插件的版本、权限以及后台脚本、内容脚本、配置页面、弹出页面等，所有的配置请查看官方开发者文档"),a("a",{attrs:{href:"https://developer.chrome.com/docs/extensions/mv3/manifest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Manifest file format"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"各元素之间的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各元素之间的关系"}},[t._v("#")]),t._v(" 各元素之间的关系")]),t._v(" "),a("p",[t._v("Chrome插件基本元素可以单独运作，但相互协作才能体现出它的价值。")]),t._v(" "),a("p",[t._v("清单除了可以用来做插件的配置，还可以使用“commands”定义一些键盘快捷键，在后台脚本使用chrome.commands.onCommand.addListener监听快捷键的触发")]),t._v(" "),a("p",[t._v("内容脚本、配置页面、弹出页面三者与后端脚本的通信，通过chrome.runtime.sendMessage发送信息，后端脚本使用chrome.runtime.onMessage.addListener监听")]),t._v(" "),a("p",[a("img",{attrs:{src:e(381),alt:"An image"}})]),t._v(" "),a("h2",{attrs:{id:"如何解决插件热更新问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何解决插件热更新问题"}},[t._v("#")]),t._v(" 如何解决插件热更新问题？")]),t._v(" "),a("p",[t._v("热更新在前端开发领域是个标准配置，但是到了Chrome插件开发，会发现插件不会随着代码的热更新而重新加载。查阅Chrome插件开发者文档，发现有个chrome.runtime.reload，是用来重新加载插件的，可以解决这个问题。")]),t._v(" "),a("p",[t._v("回顾前面所讲，可以配置一个快捷键，一键刷新插件")]),t._v(" "),a("p",[t._v("在manifest.json 增加如下配置")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commands"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"reload_extension"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"suggested_key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ctrl+Shift+K"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mac"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Command+Shift+K"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"重新加载插件"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("接着在后台脚本监听快捷键")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("chrome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onCommand"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reload_extension'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    chrome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("配置完成后，代码更新后只需要按下快捷键，即可刷新插件。当然，更好的做法是，将这个刷新插件的功能单独做成一个插件，因为这跟插件的业务功能没有关系，只是开发需要，不应该和业务代码放在一起。")]),t._v(" "),a("h2",{attrs:{id:"配置页面和弹出页面可以做成多页面吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置页面和弹出页面可以做成多页面吗"}},[t._v("#")]),t._v(" 配置页面和弹出页面可以做成多页面吗？")]),t._v(" "),a("p",[t._v("可以。配置页面和弹出页面有各自的入口文件，可以分别做成单页应用，使用前端路由切换多页面。")]),t._v(" "),a("h2",{attrs:{id:"如何在页面里插入自定义页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何在页面里插入自定义页面"}},[t._v("#")]),t._v(" 如何在页面里插入自定义页面？")]),t._v(" "),a("p",[t._v("某些场景下，需要在第三方页面上插入自己的自定义页面，有很多种方法")]),t._v(" "),a("ul",[a("li",[t._v("用原生js创建DOM元素和样式插入到页面，优点是没有第三方依赖，缺点是效率低，样式没有隔离")]),t._v(" "),a("li",[t._v("使用web component创建自定义元素，优点是样式、事件隔离，缺点是chrome插件不支持，chrome插件里的window是简化版的，window.customElements值是undefined，无法创建自定义元素")]),t._v(" "),a("li",[t._v("将自定义页面作为配置页面或弹出页面内某个子页面，利用iframe加载，chrome.runtime.getURL可以获取指定页面src，然后赋值给iframe即可。优点是可以和插件本身的页面共用一套技术栈，并且可以利用chrome.runtime.sendMessage和插件通讯，样式和事件也是隔离的，没有明显的缺点，推荐这种方式")])]),t._v(" "),a("h2",{attrs:{id:"chrome-runtime-sendmessage和chrome-tabs-sendmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chrome-runtime-sendmessage和chrome-tabs-sendmessage"}},[t._v("#")]),t._v(" chrome.runtime.sendMessage和chrome.tabs.sendMessage")]),t._v(" "),a("p",[t._v("两者都是用来向扩展中的事件监听器发送消息的，不同的是，chrome.tabs.sendMessage是向指定tab发送消息，chrome.runtime.sendMessage是向所有tab发送，并且，要向内容脚本发送消息，只能使用chrome.tabs.sendMessage")])])}),[],!1,null,null,null);s.default=r.exports}}]);